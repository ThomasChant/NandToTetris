// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[9..11],a=lo1,b=lo2,c=lo3,d=lo4,e=lo5,f=lo6,g=lo7,h=lo8);
	DMux8Way16(in=in,sel=address[9..11],a=o1,b=o2,c=o3,d=o4,e=o5,f=o6,g=o7,h=o8);
    RAM512(in=o1,load=lo1,address=address[0..8],out=ro1);
	RAM512(in=o2,load=lo2,address=address[0..8],out=ro2);
	RAM512(in=o3,load=lo3,address=address[0..8],out=ro3);
	RAM512(in=o4,load=lo4,address=address[0..8],out=ro4);
	RAM512(in=o5,load=lo5,address=address[0..8],out=ro5);
	RAM512(in=o6,load=lo6,address=address[0..8],out=ro6);
	RAM512(in=o7,load=lo7,address=address[0..8],out=ro7);
	RAM512(in=o8,load=lo8,address=address[0..8],out=ro8);
	Mux8Way16(a=ro1,b=ro2,c=ro3,d=ro4,e=ro5,f=ro6,g=ro7,h=ro8,sel=address[9..11],out=out);
}